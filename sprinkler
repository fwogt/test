-- Simple Sprinkler Deleter - Delete all sprinklers once
-- Extracted from DEMONHUB

-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Sprinkler types to delete
local sprinklerTypes = {
    "Basic Sprinkler",
    "Advanced Sprinkler",
    "Master Sprinkler",
    "Godly Sprinkler",
    "Honey Sprinkler",
    "Chocolate Sprinkler"
}

-- Auto-equip shovel
local function equipShovel()
    local shovelName = "Shovel [Destroy Plants]"
    local shovel = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(shovelName)
    if not shovel then
        shovel = LocalPlayer.Backpack:FindFirstChild(shovelName)
        if shovel then
            shovel.Parent = LocalPlayer.Character
            task.wait(0.5)
        end
    end
    return shovel
end

-- Find player's farm
local function findPlayerFarm()
    local farmFolder = Workspace:FindFirstChild("Farm")
    if not farmFolder then
        warn("Farm folder not found")
        return nil
    end

    for _, farm in ipairs(farmFolder:GetChildren()) do
        local ownerData = farm:FindFirstChild("Important") 
            and farm.Important:FindFirstChild("Data") 
            and farm.Important.Data:FindFirstChild("Owner")
        if ownerData and ownerData.Value == LocalPlayer.Name then
            return farm
        end
    end
    
    warn("Player's farm not found")
    return nil
end

-- Main deletion function
local function deleteAllSprinklers()
    print("Starting sprinkler deletion...")
    
    -- Find player's farm
    local playerFarm = findPlayerFarm()
    if not playerFarm then
        return
    end

    -- Get objects folder
    local objectsFolder = playerFarm:FindFirstChild("Important") 
        and playerFarm.Important:FindFirstChild("Objects_Physical")
    if not objectsFolder then
        warn("Objects_Physical folder not found")
        return
    end

    -- Equip shovel
    local shovel = equipShovel()
    if not shovel then
        warn("Could not equip shovel")
        return
    end

    -- Get shovel environment for proper deletion
    local destroyEnv = nil
    local shovelClient = shovel:FindFirstChild("MainScript") 
        or shovel:FindFirstChildWhichIsA("Script") 
        or shovel:FindFirstChildWhichIsA("LocalScript")
    
    if shovelClient then
        local success, env = pcall(function()
            return getsenv and getsenv(shovelClient) or nil
        end)
        if success then
            destroyEnv = env
        end
    end

    -- Delete sprinklers
    local deletedCount = 0
    local deletedTypes = {}

    for _, obj in ipairs(objectsFolder:GetChildren()) do
        for _, typeName in ipairs(sprinklerTypes) do
            if obj.Name == typeName then
                if not deletedTypes[typeName] then
                    deletedTypes[typeName] = 0
                end
                deletedTypes[typeName] = deletedTypes[typeName] + 1
                
                -- Delete the sprinkler
                pcall(function()
                    if destroyEnv and destroyEnv.Destroy and typeof(destroyEnv.Destroy) == "function" then
                        destroyEnv.Destroy(obj)
                    else
                        obj:Destroy()
                    end
                end)
                deletedCount = deletedCount + 1
            end
        end
    end

    -- Print results
    if deletedCount > 0 then
        print(string.format("Successfully deleted %d sprinklers:", deletedCount))
        for typeName, count in pairs(deletedTypes) do
            print(string.format("  - %s: %d", typeName, count))
        end
    else
        print("No sprinklers found to delete")
    end
end

-- Run the deletion
deleteAllSprinklers()
